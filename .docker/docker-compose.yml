version: "3.7"

services:
  mysql-master:
    image: mysql:latest
    container_name: test-project-mysql-master
    environment:
      - MYSQL_DATABASE=mydb
      - MYSQL_ROOT_PASSWORD=pass
    restart: "no"
    ports:
      - "4406:3306"
    volumes:
      - ./master/master.sql:/docker-entrypoint-initdb.d/start.sql
      - ./master/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./master/data:/var/lib/mysql
    networks:
      - test-project

  mysql-slave:
    image: mysql:latest
    container_name: test-project-mysql-slave
    restart: "no"
    environment:
      - MYSQL_DATABASE=mydb
      - MYSQL_ROOT_PASSWORD=pass
    ports:
      - "5506:3306"
    depends_on:
      - mysql-master
    volumes:
      - ./slave/slave.sql:/docker-entrypoint-initdb.d/start.sql
      - ./slave/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./slave/data:/var/lib/mysql
    networks:
      - test-project

  adminer:
    image: adminer
    container_name: test-project-adminer
    restart: always
    ports:
      - "8082:8080"
    networks:
      - test-project

  api:
    build:
      args:
        user: user
        uid: 1000
      context: ./
      dockerfile: ./api/Dockerfile
    image: test-project-api
    container_name: test-project-api-app
    restart: unless-stopped
    ports:
      - "9011:9000"
    volumes:
      - ./../:/var/www/api:cached
    networks:
      - test-project

  composer:
    image: composer:2.2
    container_name: test-project-composer
    volumes:
      - ./../:/var/www
    working_dir: /var/www
    depends_on:
      - api
    entrypoint: [ 'composer', 'install' , '--ignore-platform-reqs']
    networks:
      - test-project

  npm:
    image: node:current-alpine
    container_name: test-project-npm
    volumes:
      - ./../frontend:/var/www
    working_dir: /var/www
    depends_on:
      - composer
    entrypoint: [ 'npm', 'i' ]
    networks:
      - test-project

  nginx:
    image: nginx:alpine
    container_name: test-project-nginx
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "81:81"
    volumes:
      - ./../:/var/www/api:cached
      - ./nginx:/etc/nginx/conf.d
    links:
      - api
    networks:
      - test-project

networks:
 test-project:
    driver: bridge
    name: test-project-network
