version: "3.7"

services:
  mysql-master1:
    image: mysql:latest
    container_name: mysql-master1
    restart: unless-stopped
    volumes:
        - ./master1/my.cnf:/etc/mysql/my.cnf
        - ./master1/data:/var/lib/mysql
    environment:
        - MYSQL_DATABASE=mydb
        - MYSQL_ROOT_PASSWORD=pass
    networks:
        test-project:
            aliases:
                - mysql

  mysql-master2:
    image: mysql:latest
    container_name: mysql-master2
    restart: unless-stopped
    volumes:
        - ./master2/my.cnf:/etc/mysql/my.cnf
        - ./master2/data:/var/lib/mysql
    environment:
        - MYSQL_DATABASE=mydb
        - MYSQL_ROOT_PASSWORD=pass
    networks:
        test-project:
            aliases:
                - mysql

  lb:
    image: haproxytech/haproxy-ubuntu:latest
    container_name: haproxy
    restart: unless-stopped
    ports:
      - "2999:2999"
      - "3306:3306"
    volumes:
      - ./haproxy/haproxy.cfg:/etc/haproxy/haproxy.cfg
    networks:
      - test-project

  adminer:
    image: adminer
    container_name: test-project-adminer
    restart: always
    ports:
      - "8082:8080"
    networks:
      - test-project

  api:
    build:
      args:
        user: user
        uid: 1000
      context: ./
      dockerfile: ./api/Dockerfile
    image: test-project-api
    container_name: test-project-api-app
    restart: unless-stopped
    ports:
      - "9011:9000"
    volumes:
      - ./../:/var/www/api:cached
    networks:
      - test-project

  composer:
    image: composer:2.2
    container_name: test-project-composer
    volumes:
      - ./../:/var/www
    working_dir: /var/www
    depends_on:
      - api
    entrypoint: [ 'composer', 'install' , '--ignore-platform-reqs']
    networks:
      - test-project

  npm:
    image: node:current-alpine
    container_name: test-project-npm
    volumes:
      - ./../frontend:/var/www
    working_dir: /var/www
    depends_on:
      - composer
    entrypoint: [ 'npm', 'i' ]
    networks:
      - test-project

  nginx:
    image: nginx:alpine
    container_name: test-project-nginx
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "81:81"
    volumes:
      - ./../:/var/www/api:cached
      - ./nginx:/etc/nginx/conf.d
    links:
      - api
    networks:
      - test-project

networks:
 test-project:
    driver: bridge
    name: test-project-network
